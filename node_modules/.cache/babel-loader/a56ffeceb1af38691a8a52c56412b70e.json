{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\devops\\\\project\\\\src\\\\components\\\\user\\\\AddNewUser.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"../ui/Card\";\nimport Button from \"../ui/Button\";\nimport ErrorModel from \"../ui/ErrorModel\";\nimport classes from \"../user/AddNewUser.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddNewUser(props) {\n  _s();\n\n  const [user, setUser] = useState({\n    userName: \"\",\n    userAge: \"\"\n  });\n  const [error, setError] = useState();\n\n  function form_Submited(event) {\n    event.preventDefault(); //passing the values to the function on the app.js so they can be displayed on UsersList\n\n    if (user.userName.trim().length === 0 || user.userAge.trim().length === 0) {\n      return setError({\n        title: \"Invalid input\",\n        messege: \"Please enter a valid name and age (Non-empty values).\"\n      });\n    }\n\n    if (Number(user.userAge) < 1) {\n      return setError({\n        title: \"Invalid age\",\n        messege: \"Please enter a valid  age (greater than 0).\"\n      });\n    }\n\n    {\n      props.onAddUser(user.userName, user.userAge);\n    }\n    setUser({\n      userName: \"\",\n      userAge: \"\"\n    });\n  }\n\n  function user_Changed(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setUser(prevValue => {\n      return { ...prevValue,\n        [name]: value\n      };\n    });\n  }\n\n  function errorReset() {\n    setError(null);\n  } //we have to define manually className because it's custom component\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModel, {\n      title: error.title,\n      messege: error.messege,\n      onConfirm: errorReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: form_Submited,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"userName\",\n          children: \" Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"userName\",\n          type: \"text\",\n          value: user.userName,\n          onChange: user_Changed,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"userAge\",\n          children: \"Age(Year)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"userAge\",\n          type: \"Number\",\n          value: user.userAge,\n          onChange: user_Changed,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"text\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddNewUser, \"sjP2BXmu6SykTaz50da9r2h7nsg=\");\n\n_c = AddNewUser;\nexport default AddNewUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewUser\");","map":{"version":3,"sources":["D:/לימודים/devops/project/src/components/user/AddNewUser.jsx"],"names":["React","useState","Card","Button","ErrorModel","classes","AddNewUser","props","user","setUser","userName","userAge","error","setError","form_Submited","event","preventDefault","trim","length","title","messege","Number","onAddUser","user_Changed","name","value","target","prevValue","errorReset","input"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Card from \"../ui/Card\";\r\nimport Button from \"../ui/Button\";\r\nimport ErrorModel from \"../ui/ErrorModel\";\r\nimport classes from \"../user/AddNewUser.module.css\";\r\n\r\nfunction AddNewUser(props)\r\n{\r\n    const[user,setUser] = useState({\r\n        userName: \"\",\r\n        userAge: \"\"\r\n    });\r\n\r\n    const [error,setError]= useState();\r\n\r\n    function form_Submited(event)\r\n    {\r\n        event.preventDefault();\r\n        //passing the values to the function on the app.js so they can be displayed on UsersList\r\n\r\n        if(user.userName.trim().length === 0 || user.userAge.trim().length === 0)\r\n        {\r\n            return setError({\r\n                title: \"Invalid input\",\r\n                messege: \"Please enter a valid name and age (Non-empty values).\"\r\n            });\r\n        }  \r\n        if(Number(user.userAge) < 1)\r\n        {\r\n            return setError({\r\n                title: \"Invalid age\",\r\n                messege: \"Please enter a valid  age (greater than 0).\"\r\n            });\r\n        }\r\n\r\n        {props.onAddUser(user.userName,user.userAge)}\r\n\r\n        setUser({\r\n            userName:\"\",\r\n            userAge: \"\"\r\n        })\r\n    }\r\n\r\n    function user_Changed(event)\r\n    {\r\n        const { name, value } = event.target;\r\n        setUser(prevValue => \r\n          {\r\n            return {\r\n              ...prevValue,\r\n              [name]: value }\r\n          }\r\n        );\r\n    }\r\n\r\n    function errorReset()\r\n    {\r\n        setError(null);\r\n    }\r\n    //we have to define manually className because it's custom component\r\n return <div>\r\n            {/* will only output if there is a error (conditinal) */}\r\n            {error &&<ErrorModel title={error.title} messege= {error.messege} onConfirm= {errorReset}/>}\r\n            <Card className = {classes.input}>\r\n                <form onSubmit={form_Submited}>\r\n                    <label htmlFor=\"userName\"> Name</label>\r\n                    <input name=\"userName\" type=\"text\" value = {user.userName} \r\n                    onChange = {user_Changed} autoComplete = \"off\"/>\r\n                    <label htmlFor=\"userAge\">Age(Year)</label>\r\n                    <input name=\"userAge\" type=\"Number\" value = {user.userAge} \r\n                    onChange = {user_Changed} autoComplete = \"off\"/>\r\n                    <Button\r\n                    type = \"text\">Add User</Button>\r\n                </form>\r\n            </Card>\r\n        </div>\r\n      \r\n}\r\n\r\n\r\nexport default AddNewUser;"]},"metadata":{},"sourceType":"module"}
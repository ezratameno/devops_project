[{"D:\\school\\devops\\project\\src\\index.js":"1","D:\\school\\devops\\project\\src\\App.js":"2","D:\\school\\devops\\project\\src\\components\\user\\UsersList.jsx":"3","D:\\school\\devops\\project\\src\\components\\user\\AddNewUser.jsx":"4","D:\\school\\devops\\project\\src\\components\\ui\\Card.jsx":"5","D:\\school\\devops\\project\\src\\components\\ui\\Button.jsx":"6","D:\\school\\devops\\project\\src\\components\\ui\\ErrorModel.jsx":"7"},{"size":168,"mtime":1616593701000,"results":"8","hashOfConfig":"9"},{"size":708,"mtime":1628244392016,"results":"10","hashOfConfig":"9"},{"size":553,"mtime":1628244714216,"results":"11","hashOfConfig":"9"},{"size":2488,"mtime":1628250751001,"results":"12","hashOfConfig":"9"},{"size":218,"mtime":1628234420446,"results":"13","hashOfConfig":"9"},{"size":297,"mtime":1628239112600,"results":"14","hashOfConfig":"9"},{"size":953,"mtime":1628247988169,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nzc9c1",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\school\\devops\\project\\src\\index.js",[],"D:\\school\\devops\\project\\src\\App.js",[],"D:\\school\\devops\\project\\src\\components\\user\\UsersList.jsx",["32","33"],"import React, { useState } from \"react\";\r\nimport AddNewUser from \"./AddNewUser\";\r\nimport Card from \"../ui/Card\";\r\nimport classes from \"../user/UsersList.module.css\"\r\nfunction UsersList(props)\r\n{   \r\n    return <ul>\r\n        {/* assuming we get a list of users */}\r\n                {props.users.map(createUsersList)}\r\n           </ul>\r\n}\r\n\r\nfunction createUsersList(user)\r\n{\r\n    return <Card className = {classes.users} key = {user.id}>\r\n    <li >\r\n        {user.userName} ({user.userAge}) years old\r\n    </li>\r\n    </Card>\r\n}\r\nexport default UsersList;","D:\\school\\devops\\project\\src\\components\\user\\AddNewUser.jsx",["34"],"import React, { useState } from \"react\";\r\nimport Card from \"../ui/Card\";\r\nimport Button from \"../ui/Button\";\r\nimport ErrorModel from \"../ui/ErrorModel\";\r\nimport classes from \"../user/AddNewUser.module.css\";\r\n\r\nfunction AddNewUser(props)\r\n{\r\n    const[user,setUser] = useState({\r\n        userName: \"\",\r\n        userAge: \"\"\r\n    });\r\n\r\n    const [error,setError]= useState();\r\n\r\n    function form_Submited(event)\r\n    {\r\n        event.preventDefault();\r\n        //passing the values to the function on the app.js so they can be displayed on UsersList\r\n\r\n        if(user.userName.trim().length === 0 || user.userAge.trim().length === 0)\r\n        {\r\n            return setError({\r\n                title: \"Invalid input\",\r\n                messege: \"Please enter a valid name and age (Non-empty values).\"\r\n            });\r\n        }  \r\n        if(Number(user.userAge) < 1)\r\n        {\r\n            return setError({\r\n                title: \"Invalid age\",\r\n                messege: \"Please enter a valid  age (greater than 0).\"\r\n            });\r\n        }\r\n\r\n        {props.onAddUser(user.userName,user.userAge)}\r\n\r\n        setUser({\r\n            userName:\"\",\r\n            userAge: \"\"\r\n        })\r\n    }\r\n\r\n    function user_Changed(event)\r\n    {\r\n        const { name, value } = event.target;\r\n        setUser(prevValue => \r\n          {\r\n            return {\r\n              ...prevValue,\r\n              [name]: value }\r\n          }\r\n        );\r\n    }\r\n\r\n    function errorReset()\r\n    {\r\n        setError(null);\r\n    }\r\n    //we have to define manually className because it's custom component\r\n return <div>\r\n            {/* will only output if there is a error (conditinal) */}\r\n            {error &&<ErrorModel title={error.title} messege= {error.messege} onConfirm= {errorReset}/>}\r\n            <Card className = {classes.input}>\r\n                <form onSubmit={form_Submited}>\r\n                    <label htmlFor=\"userName\"> Name</label>\r\n                    <input name=\"userName\" type=\"text\" value = {user.userName} \r\n                    onChange = {user_Changed} autoComplete = \"off\"/>\r\n                    <label htmlFor=\"userAge\">Age(Year)</label>\r\n                    <input name=\"userAge\" type=\"Number\" value = {user.userAge} \r\n                    onChange = {user_Changed} autoComplete = \"off\"/>\r\n                    <Button\r\n                    type = \"text\">Add User</Button>\r\n                </form>\r\n            </Card>\r\n        </div>\r\n      \r\n}\r\n\r\n\r\nexport default AddNewUser;","D:\\school\\devops\\project\\src\\components\\ui\\Card.jsx",[],"D:\\school\\devops\\project\\src\\components\\ui\\Button.jsx",[],"D:\\school\\devops\\project\\src\\components\\ui\\ErrorModel.jsx",[],{"ruleId":"35","severity":1,"message":"36","line":1,"column":17,"nodeType":"37","messageId":"38","endLine":1,"endColumn":25},{"ruleId":"35","severity":1,"message":"39","line":2,"column":8,"nodeType":"37","messageId":"38","endLine":2,"endColumn":18},{"ruleId":"40","severity":1,"message":"41","line":36,"column":9,"nodeType":"42","messageId":"43","endLine":36,"endColumn":54},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'AddNewUser' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock"]